config:
  output_dir: /home/jayckaiser/code/renpy-analyzer/visual_novels/adastra/outputs
  log_level: DEBUG
  show_stacktrace: True
  show_graph: False

custom_nodes:
  sources:
    - ['renpy_analyzer.nodes', 'SourceRA']
  operations:
    - ['renpy_analyzer.nodes', 'OperationRA']
  destinations:
    - ['renpy_analyzer.nodes', 'DestinationRA']


anchors:
  renpy_keywords: &renpy_keywords [
    ease, hide, jump, label, menu,
    pause, play, queue, return, scene,
    scene, show, stop, window, with,
  ]


sources:
  adastra:
    mode: renpy_visual_novel
    game_dir: /home/jayckaiser/code/renpy-analyzer/visual_novels/adastra/game
    script_files:
      - a1s1.rpy
      - a1s2.rpy
      - a1s3.rpy
      - a1s4.rpy
      - a1s5.rpy
      - a1s6.rpy
      - a1s7.rpy
      - a2s1.rpy
      - a2s2.rpy
      - a2s3.rpy
      - a3s1.rpy
      - a3s2.rpy
      - end_game1.rpy
      - end_game2.rpy
  # columns: [file, line_idx, raw]


transformations:

  clean_text:
    operations:
      - operation: add_columns
        source: $sources.adastra
        columns:
          line: '{{ raw }}'

      # Trim, remove escape characters, replace MC name
      - operation: regexp_replace
        source: $sources.adastra
        column: line
        trim: True
        replaces:
          '\\': ''
          '\[mc\]': 'Marco'
          '{/?i}': '*'     # Clean italics formatting
          '{cps=\d+}': ''  # Clean text-scroll formatting
          '\u0027': "'"    # Replace apostrophes
          '\u2014': '--'   # Replace em-dashes

      - operation: filter_rows
        source: $transformations.clean_text
        query: "line == ''"
        behavior: exclude

  categorize_text:
    operations:
      - operation: add_columns
        source: $transformations.clean_text
        columns:
          category: 'unknown'
          speaker: 'speaker_unspecified'

      # Select category and collect match groups
      - operation: regexp_match_groups
        source: $transformations.categorize_text
        column: line
        classification_col: category
        group_cols:
          - speaker
          - line
        regexes:
          renpy_comment: '^#.*$'
          renpy_python: '^$.*$'
          renpy_keyword: '^(ease|hide|jump|label|menu|pause|play|queue|return|scene|scene|show|stop|window|with).*$'
          choice_condition: '^(if|else:).*$'
          dialogue_alias: '^(?P<speaker>[a-z]+) "(?P<line>.*)"$'
          dialogue_name: '^"(?P<speaker>.*?)" "(?P<line>.*)"$'
          dialogue_unspecified: '^"(?P<line>".+")"$'
          dialogue_internal: '^"(?P<line>.+)"$'
          choice_player: '^"(?P<line>.+)":$'

  add_flags:
    operations:
      - operation: add_columns
        source: $transformations.categorize_text
        columns:
          is_renpy: '{{ category.startswith("renpy_") }}'
          is_choice: '{{ category.startswith("choice_") }}'
          is_read: '{{ category.startswith("dialogue_") }}'
          has_speaker: '{{ is_read == true and category != "dialogue_unspecified" and category != "dialogue_internal" }}'
          is_branch: '{{ (raw.startswith("    ")) and is_choice == false }}'

  conform_speaker:
    operations:
      - operation: map_values
        source: $transformations.add_flags
        column: speaker
        mapping:
          a: amicus
          m: marco
          unk: ?????
          com: computer
          c: cassius
          ca: cato
          al: alexios
          v: virginia
          n: neferu
          mon: monitor
          sc: scipio
          me: meera

#  add_nlp:
#    operations:
#      - operation: apply_spacy
#        source: $transformations.conform_speaker
#        document_col: line


destinations:
  adastra_earthmover:
    source: $transformations.conform_speaker
    template: /home/jayckaiser/code/renpy-analyzer/visual_novels/adastra/templates/renpy_vn.jsont
    extension: jsonl
    linearize: True

#  adastra_earthmover_nlp:
#    source: $transformations.add_nlp
#    template: /home/jayckaiser/code/renpy-analyzer/visual_novels/adastra/templates/renpy_vn_nlp.jsont
#    extension: jsonl
#    linearize: True
